// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: orbital/v1/meta_data.proto

package orbitalv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MetaData contains information about the message signature and encryption status.
type MetaData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signature contains the information about the message signature.
	Signature *Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// isEncrypted indicates whether the message is encrypted.
	IsEncrypted   bool `protobuf:"varint,2,opt,name=isEncrypted,proto3" json:"isEncrypted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	mi := &file_orbital_v1_meta_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_orbital_v1_meta_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_orbital_v1_meta_data_proto_rawDescGZIP(), []int{0}
}

func (x *MetaData) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MetaData) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

type Signature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// value is the signature of the message.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// type specifies the type of the signature.
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_orbital_v1_meta_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_orbital_v1_meta_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_orbital_v1_meta_data_proto_rawDescGZIP(), []int{1}
}

func (x *Signature) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Signature) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_orbital_v1_meta_data_proto protoreflect.FileDescriptor

const file_orbital_v1_meta_data_proto_rawDesc = "" +
	"\n" +
	"\x1aorbital/v1/meta_data.proto\x12\n" +
	"orbital.v1\"a\n" +
	"\bMetaData\x123\n" +
	"\tsignature\x18\x01 \x01(\v2\x15.orbital.v1.SignatureR\tsignature\x12 \n" +
	"\visEncrypted\x18\x02 \x01(\bR\visEncrypted\"5\n" +
	"\tSignature\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04typeB\x9f\x01\n" +
	"\x0ecom.orbital.v1B\rMetaDataProtoP\x01Z5github.com/openkcm/orbital/proto/orbital/v1;orbitalv1\xa2\x02\x03OXX\xaa\x02\n" +
	"Orbital.V1\xca\x02\n" +
	"Orbital\\V1\xe2\x02\x16Orbital\\V1\\GPBMetadata\xea\x02\vOrbital::V1b\x06proto3"

var (
	file_orbital_v1_meta_data_proto_rawDescOnce sync.Once
	file_orbital_v1_meta_data_proto_rawDescData []byte
)

func file_orbital_v1_meta_data_proto_rawDescGZIP() []byte {
	file_orbital_v1_meta_data_proto_rawDescOnce.Do(func() {
		file_orbital_v1_meta_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orbital_v1_meta_data_proto_rawDesc), len(file_orbital_v1_meta_data_proto_rawDesc)))
	})
	return file_orbital_v1_meta_data_proto_rawDescData
}

var file_orbital_v1_meta_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_orbital_v1_meta_data_proto_goTypes = []any{
	(*MetaData)(nil),  // 0: orbital.v1.MetaData
	(*Signature)(nil), // 1: orbital.v1.Signature
}
var file_orbital_v1_meta_data_proto_depIdxs = []int32{
	1, // 0: orbital.v1.MetaData.signature:type_name -> orbital.v1.Signature
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_orbital_v1_meta_data_proto_init() }
func file_orbital_v1_meta_data_proto_init() {
	if File_orbital_v1_meta_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orbital_v1_meta_data_proto_rawDesc), len(file_orbital_v1_meta_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orbital_v1_meta_data_proto_goTypes,
		DependencyIndexes: file_orbital_v1_meta_data_proto_depIdxs,
		MessageInfos:      file_orbital_v1_meta_data_proto_msgTypes,
	}.Build()
	File_orbital_v1_meta_data_proto = out.File
	file_orbital_v1_meta_data_proto_goTypes = nil
	file_orbital_v1_meta_data_proto_depIdxs = nil
}
