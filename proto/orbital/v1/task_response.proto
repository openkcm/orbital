syntax = "proto3";

package orbital.v1;


// TaskStatus defines the possible statuses of a task.
enum TaskStatus {
  PROCESSING = 0; // operator is still working on the task
  DONE = 1; // operator has completed the task
  FAILED = 2; // operator encountered an error
}

// TaskResponse is the response object received from the operator.
message TaskResponse {
  string taskId = 10; // UUID as string
  string type = 20; // Type of the task
  string externalId = 25; // External ID serves as an identifier for a Job.
  optional bytes workingState = 30; // Updated state of the task
  string etag = 40; // Correlates with TaskRequest
  TaskStatus status = 50; // Status of the task
  optional string errorMessage = 60; // Optional error message
  int64 reconcileAfterSec = 70; // Time in seconds to delay next retry
  map<string, string> metaData = 80; // MetaData contains additional information about the message
}
